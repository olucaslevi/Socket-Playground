{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\Estudos Js\\\\React-Playground\\\\reactapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport { useState, useEffect, useRef } from 'react';\n// importin three\nimport * as THREE from 'three';\n// importing cannon to physics\nimport * as CANNON from 'cannon-es';\nimport CannonDebugger from 'cannon-es-debugger';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\n// importing class player\nimport Player from './Components/player.js';\n// import chat.js\nimport { World } from 'cannon-es';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"https://localhost:80\");\nlet currentPlayer;\nlet color;\nexport function App() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [players, setPlayers] = useState([]);\n  var otherPlayers = [],\n    otherPlayersId = [];\n  var player, playerId, moveSpeed, turnSpeed;\n  var playerData;\n  var sphere;\n  var keyState = {};\n  var objects = [];\n  // ? Chatbox Stuff\n\n  function log(text, autor, color) {\n    // document.getElementById(\"usernameError\").innerHTML = `<span style='${color}'>**Message</span>`;\n    const parent = document.getElementById(\"chat-list\");\n    const el = document.createElement('li'); // Create a <li> node num <ul>\n    el.innerHTML = `<span style='color: ${color}'>${autor}: </span> ${text}`;\n    parent.appendChild(el); // appends the <li> node to the <ul> node\n    parent.scrollTop = parent.scrollHeight; // scrolls the chat box to the bottom\n  }\n\n  useEffect(() => {\n    socket.on('connect', function () {\n      init(); // this \n      // pedir outros jogadores conectados\n      socket.emit('requestOldPlayers', {});\n      socket.emit('update', {});\n      // se enviar p/ ser atualizado nos outros jogadores\n    });\n\n    function init() {\n      const scene = new THREE.Scene(); /// creating scene\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      const renderer = new THREE.WebGLRenderer();\n      const physicsWorld = new CANNON.World({\n        /// this is the physics world, it will be used to add physics to the objects\n        gravity: new CANNON.Vec3(0, -10, 0),\n        frictionGravity: 0.5\n      });\n\n      // Create a slippery material (friction coefficient = 0.0)\n      const physicsMaterial = new CANNON.Material('physics'); //  physics material for the ground\n      const physics_physics = new CANNON.ContactMaterial(physicsMaterial, physicsMaterial, {\n        friction: 0.0,\n        restitution: 0.3\n      });\n      // We must add the contact materials to the world\n      physicsWorld.addContactMaterial(physics_physics);\n      const groundBody = new CANNON.Body({\n        mass: 0,\n        material: physicsMaterial,\n        shape: new CANNON.Plane(),\n        type: CANNON.Body.STATIC\n      });\n      groundBody.position.set(0, -0.5, 0);\n      groundBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2); // * rotate the ground\n      physicsWorld.addBody(groundBody);\n\n      // ? This is to see the lines of the physics world\n\n      const cannonDebugger = new CannonDebugger(scene, physicsWorld);\n\n      // * adding grid to scene\n      scene.add(new THREE.GridHelper(100, 100));\n\n      // *size, intensity, distance, decay\n      renderer.setSize(window.innerWidth / 1.3, window.innerHeight / 1.3);\n      document.body.appendChild(renderer.domElement);\n      const controls = new OrbitControls(camera, renderer.domElement);\n      controls.target.set(0, 10, 0);\n\n      // socket.on('message', (message, autor) => {\n      //    log(message, autor, currentPlayer.color);\n      // });\n      // * test \n      //Sphere------------------\n\n      var createPlayer = function (data) {\n        playerData = data;\n        var cube_geometry = new THREE.BoxGeometry(data.sizeX, data.sizeY, data.sizeZ);\n        var cube_material = new THREE.MeshBasicMaterial({\n          color: 0x7777ff,\n          wireframe: false\n        });\n        player = new THREE.Mesh(cube_geometry, cube_material);\n        player.rotation.set(0, 0, 0);\n        player.position.x = data.x;\n        player.position.y = data.y;\n        player.position.z = data.z;\n        playerId = data.playerId;\n        moveSpeed = data.speed;\n        turnSpeed = data.turnSpeed;\n        objects.push(player);\n        scene.add(player);\n        camera.lookAt(player.position);\n      };\n      socket.on('createPlayer', function (data) {\n        createPlayer(data);\n      });\n      socket.on('removeOtherPlayer', function (data) {\n        removeOtherPlayer(data);\n      });\n      var updatePlayerPosition = function (data) {\n        var somePlayer = playerForId(data.playerId);\n        if (somePlayer) {\n          somePlayer.position.x = data.x;\n          somePlayer.position.y = data.y;\n          somePlayer.position.z = data.z;\n          somePlayer.rotation.x = data.r_x;\n          somePlayer.rotation.y = data.r_y;\n          somePlayer.rotation.z = data.r_z;\n        }\n      };\n      socket.on('updatePosition', function (data) {\n        updatePlayerPosition(data);\n      });\n      var updatePlayerData = function () {\n        playerData.x = player.position.x;\n        playerData.y = player.position.y;\n        playerData.z = player.position.z;\n        playerData.r_x = player.rotation.x;\n        playerData.r_y = player.rotation.y;\n        playerData.r_z = player.rotation.z;\n      };\n      var addOtherPlayer = function (data) {\n        var cube_geometry = new THREE.BoxGeometry(data.sizeX, data.sizeY, data.sizeZ);\n        var cube_material = new THREE.MeshBasicMaterial({\n          color: 0x7777ff,\n          wireframe: false\n        });\n        var otherPlayer = new THREE.Mesh(cube_geometry, cube_material);\n        otherPlayer.position.x = data.x;\n        otherPlayer.position.y = data.y;\n        otherPlayer.position.z = data.z;\n        otherPlayersId.push(data.playerId);\n        otherPlayers.push(otherPlayer);\n        objects.push(otherPlayer);\n        scene.add(otherPlayer);\n        console.log(\"other player added\");\n      };\n      socket.on('addOtherPlayer', function (data) {\n        console.log('info q chega do server Ã©:', data);\n        addOtherPlayer(data);\n      });\n      socket.on('update', data => {\n        addOtherPlayer(data);\n      });\n      var removeOtherPlayer = function (data) {\n        scene.remove(playerForId(data.playerId));\n      };\n      var playerForId = function (id) {\n        var index;\n        for (var i = 0; i < otherPlayersId.length; i++) {\n          if (otherPlayersId[i] == id) {\n            index = i;\n            break;\n          }\n        }\n        return otherPlayers[index];\n      };\n      // * adding player to scene\n\n      // ? player physics body\n      var playerShape = new CANNON.Box(new CANNON.Vec3(1, 1, 1));\n      var playerBody = new CANNON.Body({\n        mass: 1,\n        material: physicsMaterial,\n        shape: playerShape,\n        type: CANNON.Body.DYNAMIC\n      });\n      // ? player mesh\n      let playerMesh = new THREE.Mesh(new THREE.BoxGeometry(2, 2, 2), new THREE.MeshBasicMaterial({\n        color: 'blue'\n      }) // set opacity to 0\n      );\n      // ? light\n      const light2 = new THREE.DirectionalLight(0xffffff, 1);\n      light2.position.set(0, 1, 0);\n      scene.add(light2);\n\n      // ? Texture from ground plane\n      let planesize = 100;\n      // load a texture, set wrap mode to repeat\n      const texture = new THREE.TextureLoader().load('https://threejsfundamentals.org/threejs/resources/images/checker.png');\n      texture.wrapS = THREE.RepeatWrapping;\n      texture.wrapT = THREE.RepeatWrapping;\n      const repeats = planesize / 2;\n      // do not blur texture\n      texture.magFilter = THREE.NearestFilter;\n      texture.repeat.set(repeats, repeats);\n\n      // ? Plane Ground\n      const planeGeometry = new THREE.PlaneGeometry(100, 100, 10, 10);\n      // soft green collor: 0x44aa88\n      const planeMaterial = new THREE.MeshBasicMaterial({\n        map: texture,\n        side: THREE.DoubleSide\n      });\n      const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n      plane.receiveShadow = true;\n      plane.rotation.x = -0.5 * Math.PI;\n      plane.position.y = -0.5;\n      scene.add(plane);\n\n      // ? set background soft blue: 0x44aaff\n      scene.background = new THREE.Color(0x44aaff);\n\n      // ? draw FPS\n      const stats = new Stats();\n      document.body.appendChild(stats.dom);\n\n      // * camera lookAt\n      camera.lookAt(0, 0, 0);\n      // * camera update\n      camera.updateProjectionMatrix();\n      camera.position.z = 18;\n      camera.position.y = 10;\n      // camera rotation\n      camera.rotation.z = 50;\n\n      // ? show x,y,z lines in scene\n      const axesHelper = new THREE.AxesHelper(50);\n      scene.add(axesHelper);\n\n      // ! DRAW THE PLAYER NAME IN 2D.\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      context.font = 'Bold 28px Arial';\n      context.fillRect(0, 0, 0, 300);\n      const textureText = new THREE.CanvasTexture(canvas);\n      const spriteMaterial = new THREE.SpriteMaterial({\n        map: textureText\n      });\n      const sprite = new THREE.Sprite(spriteMaterial);\n      sprite.scale.set(10, 5, 1.0);\n\n      // * wasd movement\n      document.addEventListener('keydown', event => {\n        const keyName = event.key;\n        if (keyName === 'w') {\n          // up arrow or 'w' - move forward\n          player.position.x -= moveSpeed * Math.sin(player.rotation.y);\n          player.position.z -= moveSpeed * Math.cos(player.rotation.y);\n          updatePlayerData();\n          socket.emit('updatePosition', playerData);\n        }\n        if (keyName === 's') {\n          // down arrow or 's' - move backward\n          player.position.x += moveSpeed * Math.sin(player.rotation.y);\n          player.position.z += moveSpeed * Math.cos(player.rotation.y);\n          updatePlayerData();\n          socket.emit('updatePosition', playerData);\n        }\n        if (keyName === 'a') {\n          // left arrow or 'a' - rotate left\n          player.position.x -= moveSpeed;\n          updatePlayerData();\n          socket.emit('updatePosition', playerData);\n        }\n        if (keyName === 'd') {\n          // right arrow or 'd' - rotate right\n          player.position.x += moveSpeed;\n          updatePlayerData();\n          socket.emit('updatePosition', playerData);\n        }\n        if (keyName === ' ') {\n          console.log('pulou');\n        }\n      }); //keydown\n      // document.addEventListener('keyup', (event) => {\n      //    const keyName = event.key;\n      //    if (keyName === 'w') {\n      //       playerBody.velocity.z = 0;\n      //    }\n      //    if (keyName === 's') {\n      //       playerBody.velocity.z = 0;\n\n      //    }\n      //    if (keyName === 'a') {\n      //       playerBody.velocity.x = 0;\n      //    }\n      //    if (keyName === 'd') {\n      //       playerBody.velocity.x = 0;\n      //    }\n      // }); //keyup\n\n      const update = () => {\n        // * update camera\n        camera.updateProjectionMatrix();\n        // * update controls\n        controls.update();\n        // * update stats\n        stats.update();\n        // * update cannonDebugger\n        cannonDebugger.update();\n        // * update physicsWorld\n        physicsWorld.step(1 / 60);\n        // * update player username position\n        sprite.position.copy(playerBody.position);\n        sprite.position.y += 3.4;\n      };\n      const animate = () => {\n        // animation loop\n        update();\n        physicsWorld.fixedStep();\n        requestAnimationFrame(animate);\n        renderer.render(scene, camera);\n      };\n      animate();\n    }\n  }, []);\n  function handleChange(event) {\n    setName(event.target.value);\n    console.log(name);\n  }\n  function handleClick() {// envio apenas o username\n    // if (name != \"\") {\n    //    if (name.length > 3 && name.length < 10) {\n    //       socket.emit('newPlayer', name);\n    //       document.getElementById(\"username\").style.display = \"none\";\n    //       document.getElementById(\"buttonSubmit\").style.display = \"none\";\n    //    }else{\n    //       alert(\"Nome muito curto\");\n    //    }\n    // }else{\n    //    alert(\"Nome invÃ¡lido\");\n    // }\n  }\n  function handleExit() {}\n  function handleMessageChange(event) {\n    setMessage(event.target.value);\n  }\n  function handleSendMessage(e) {\n    e.preventDefault();\n    socket.emit('message', message, name);\n    // set value to empty\n    console.log(message);\n    document.getElementById(\"chat\").value = \"\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      \"z-index\": \"15000   \",\n      children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n        \"http-equiv\": \"Content-Security-Policy\",\n        content: \"upgrade-insecure-requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Digite um nome \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          maxLength: 12,\n          placeholder: \"username\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 119\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"buttonSubmit\",\n          type: \"submit\",\n          onClick: handleClick,\n          children: \"Fazer Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"root\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chat-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"chat-list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            id: \"chat-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"chat\",\n              autoComplete: \"off\",\n              onChange: handleMessageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"click\",\n              id: \"submit\",\n              onClick: handleSendMessage,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              id: \"btnSair\",\n              onClick: handleExit,\n              children: \"Sair\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 392,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"c62rMmwrEzsoo81b+icl6eVvoyA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","io","useState","useEffect","useRef","THREE","CANNON","CannonDebugger","OrbitControls","GLTFLoader","Stats","Player","World","socket","connect","currentPlayer","color","App","name","setName","user","setUser","message","setMessage","messages","setMessages","players","setPlayers","otherPlayers","otherPlayersId","player","playerId","moveSpeed","turnSpeed","playerData","sphere","keyState","objects","log","text","autor","parent","document","getElementById","el","createElement","innerHTML","appendChild","scrollTop","scrollHeight","on","init","emit","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","physicsWorld","gravity","Vec3","frictionGravity","physicsMaterial","Material","physics_physics","ContactMaterial","friction","restitution","addContactMaterial","groundBody","Body","mass","material","shape","Plane","type","STATIC","position","set","quaternion","setFromAxisAngle","Math","PI","addBody","cannonDebugger","add","GridHelper","setSize","body","domElement","controls","target","createPlayer","data","cube_geometry","BoxGeometry","sizeX","sizeY","sizeZ","cube_material","MeshBasicMaterial","wireframe","Mesh","rotation","x","y","z","speed","push","lookAt","removeOtherPlayer","updatePlayerPosition","somePlayer","playerForId","r_x","r_y","r_z","updatePlayerData","addOtherPlayer","otherPlayer","console","remove","id","index","i","length","playerShape","Box","playerBody","DYNAMIC","playerMesh","light2","DirectionalLight","planesize","texture","TextureLoader","load","wrapS","RepeatWrapping","wrapT","repeats","magFilter","NearestFilter","repeat","planeGeometry","PlaneGeometry","planeMaterial","map","side","DoubleSide","plane","receiveShadow","background","Color","stats","dom","updateProjectionMatrix","axesHelper","AxesHelper","canvas","context","getContext","font","fillRect","textureText","CanvasTexture","spriteMaterial","SpriteMaterial","sprite","Sprite","scale","addEventListener","event","keyName","key","sin","cos","update","step","copy","animate","fixedStep","requestAnimationFrame","render","handleChange","value","handleClick","handleExit","handleMessageChange","handleSendMessage","e","preventDefault"],"sources":["C:/Users/lucas/Desktop/Estudos Js/React-Playground/reactapp/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useState,useEffect, useRef } from 'react';\r\n// importin three\r\nimport * as THREE from 'three';\r\n// importing cannon to physics\r\nimport * as CANNON from 'cannon-es';\r\nimport CannonDebugger from 'cannon-es-debugger';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\r\n\r\n// importing class player\r\nimport Player from './Components/player.js';\r\n// import chat.js\r\nimport { World } from 'cannon-es';\r\n\r\nconst socket = io.connect(\"https://localhost:80\");\r\n\r\nlet currentPlayer;\r\nlet color;\r\nexport function App() {\r\n   const [name, setName] = useState(\"\");\r\n   const [user, setUser] = useState(null);\r\n   const [message, setMessage] = useState(\"\");\r\n   const [messages, setMessages] = useState([]);\r\n   const [players, setPlayers] = useState([]);\r\n   var otherPlayers = [], otherPlayersId = [];\r\n   var player, playerId, moveSpeed, turnSpeed;\r\n   var playerData;\r\n   var sphere;\r\n   var keyState = {};\r\n   var objects = [];\r\n   // ? Chatbox Stuff\r\n   \r\n\r\n   function log (text,autor,color){\r\n      // document.getElementById(\"usernameError\").innerHTML = `<span style='${color}'>**Message</span>`;\r\n      const parent = document.getElementById(\"chat-list\");\r\n      const el = document.createElement('li'); // Create a <li> node num <ul>\r\n      el.innerHTML = `<span style='color: ${color}'>${autor}: </span> ${text}`;\r\n      parent.appendChild(el); // appends the <li> node to the <ul> node\r\n      parent.scrollTop = parent.scrollHeight; // scrolls the chat box to the bottom\r\n   }\r\n\r\n\r\n   useEffect(() => {\r\n      socket.on('connect', function(){\r\n         init(); // this \r\n         // pedir outros jogadores conectados\r\n         socket.emit('requestOldPlayers', {});\r\n         socket.emit('update',{});\r\n         // se enviar p/ ser atualizado nos outros jogadores\r\n      });\r\n      \r\n      function init () {\r\n         const scene = new THREE.Scene(); /// creating scene\r\n         const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n         const renderer = new THREE.WebGLRenderer();\r\n\r\n         const physicsWorld = new CANNON.World({ /// this is the physics world, it will be used to add physics to the objects\r\n            gravity: new CANNON.Vec3(0, -10, 0),\r\n            frictionGravity: 0.5,\r\n         });\r\n\r\n         // Create a slippery material (friction coefficient = 0.0)\r\n         const physicsMaterial = new CANNON.Material('physics') //  physics material for the ground\r\n         const physics_physics = new CANNON.ContactMaterial(physicsMaterial, physicsMaterial, {\r\n            friction: 0.0,\r\n            restitution: 0.3,\r\n            \r\n         })\r\n         // We must add the contact materials to the world\r\n         physicsWorld.addContactMaterial(physics_physics)\r\n         const groundBody = new CANNON.Body({\r\n            mass: 0,\r\n            material: physicsMaterial,\r\n            shape: new CANNON.Plane(),\r\n            type: CANNON.Body.STATIC\r\n         });\r\n         groundBody.position.set(0, -0.5, 0);\r\n         groundBody.quaternion.setFromAxisAngle(new CANNON.Vec3(1, 0, 0), -Math.PI / 2); // * rotate the ground\r\n         physicsWorld.addBody(groundBody);\r\n\r\n         // ? This is to see the lines of the physics world\r\n\r\n         const cannonDebugger = new CannonDebugger(scene, physicsWorld);\r\n\r\n         // * adding grid to scene\r\n         scene.add( new THREE.GridHelper( 100, 100 ) );\r\n         \r\n\r\n         // *size, intensity, distance, decay\r\n         renderer.setSize(window.innerWidth/1.3, window.innerHeight/1.3);\r\n         document.body.appendChild(renderer.domElement);\r\n         const controls = new OrbitControls(camera, renderer.domElement);\r\n         controls.target.set(0, 10, 0);\r\n\r\n         // socket.on('message', (message, autor) => {\r\n         //    log(message, autor, currentPlayer.color);\r\n         // });\r\n         // * test \r\n         //Sphere------------------\r\n\r\n         var createPlayer = function(data){\r\n\r\n            playerData = data;\r\n      \r\n            var cube_geometry = new THREE.BoxGeometry(data.sizeX, data.sizeY, data.sizeZ);\r\n            var cube_material = new THREE.MeshBasicMaterial({color: 0x7777ff, wireframe: false});\r\n            player = new THREE.Mesh(cube_geometry, cube_material);\r\n      \r\n            player.rotation.set(0,0,0);\r\n      \r\n            player.position.x = data.x;\r\n            player.position.y = data.y;\r\n            player.position.z = data.z;\r\n      \r\n            playerId = data.playerId;\r\n            moveSpeed = data.speed;\r\n            turnSpeed = data.turnSpeed;\r\n      \r\n      \r\n            objects.push( player );\r\n            scene.add( player );\r\n      \r\n            camera.lookAt( player.position );\r\n         };\r\n         socket.on('createPlayer', function(data){\r\n            createPlayer(data);\r\n         });\r\n\r\n         socket.on('removeOtherPlayer', function(data){\r\n            removeOtherPlayer(data);\r\n         });\r\n         var updatePlayerPosition = function(data){\r\n\r\n            var somePlayer = playerForId(data.playerId);\r\n            if(somePlayer){\r\n               somePlayer.position.x = data.x;\r\n               somePlayer.position.y = data.y;\r\n               somePlayer.position.z = data.z;\r\n\r\n               somePlayer.rotation.x = data.r_x;\r\n               somePlayer.rotation.y = data.r_y;\r\n               somePlayer.rotation.z = data.r_z;\r\n            }\r\n         };\r\n         socket.on('updatePosition', function(data){\r\n            updatePlayerPosition(data);\r\n         });\r\n            var updatePlayerData = function(){\r\n               playerData.x = player.position.x;\r\n               playerData.y = player.position.y;\r\n               playerData.z = player.position.z;\r\n\r\n               playerData.r_x = player.rotation.x;\r\n               playerData.r_y = player.rotation.y;\r\n               playerData.r_z = player.rotation.z;\r\n\r\n         };\r\n        \r\n         var addOtherPlayer = function(data){ \r\n            var cube_geometry = new THREE.BoxGeometry(data.sizeX, data.sizeY, data.sizeZ);\r\n            var cube_material = new THREE.MeshBasicMaterial({color: 0x7777ff, wireframe: false});\r\n            var otherPlayer = new THREE.Mesh(cube_geometry, cube_material);\r\n\r\n            otherPlayer.position.x = data.x;\r\n            otherPlayer.position.y = data.y;\r\n            otherPlayer.position.z = data.z;\r\n\r\n            otherPlayersId.push( data.playerId );\r\n            otherPlayers.push( otherPlayer );\r\n            objects.push( otherPlayer );\r\n            scene.add( otherPlayer );\r\n            console.log(\"other player added\");\r\n\r\n         };\r\n\r\n         socket.on('addOtherPlayer', function(data){\r\n            console.log('info q chega do server Ã©:',data)\r\n            addOtherPlayer(data);\r\n         });\r\n\r\n         socket.on('update', (data) => {\r\n            addOtherPlayer(data);\r\n         });\r\n         \r\n         var removeOtherPlayer = function(data){\r\n            scene.remove( playerForId(data.playerId) );\r\n         };\r\n\r\n         var playerForId = function(id){\r\n            var index;\r\n            for (var i = 0; i < otherPlayersId.length; i++){\r\n               if (otherPlayersId[i] == id){\r\n                  index = i;\r\n                  break;\r\n               }\r\n            }\r\n            return otherPlayers[index];\r\n         };\r\n         // * adding player to scene\r\n\r\n         // ? player physics body\r\n         var playerShape = new CANNON.Box(new CANNON.Vec3(1,1,1));\r\n         var playerBody = new CANNON.Body({\r\n            mass: 1,\r\n            material: physicsMaterial,\r\n            shape: playerShape,\r\n            type: CANNON.Body.DYNAMIC\r\n         });\r\n         // ? player mesh\r\n         let playerMesh = new THREE.Mesh(\r\n            new THREE.BoxGeometry(2, 2, 2),\r\n            new THREE.MeshBasicMaterial({ color: 'blue' }) // set opacity to 0\r\n\r\n         );\r\n         // ? light\r\n         const light2 = new THREE.DirectionalLight(0xffffff, 1);\r\n         light2.position.set(0, 1, 0);\r\n         scene.add(light2);\r\n\r\n         // ? Texture from ground plane\r\n         let planesize = 100;\r\n         // load a texture, set wrap mode to repeat\r\n         const texture = new THREE.TextureLoader().load( 'https://threejsfundamentals.org/threejs/resources/images/checker.png' );\r\n         texture.wrapS = THREE.RepeatWrapping;\r\n         texture.wrapT = THREE.RepeatWrapping;\r\n         const repeats = planesize/2;\r\n         // do not blur texture\r\n         texture.magFilter = THREE.NearestFilter;\r\n         texture.repeat.set( repeats, repeats );\r\n         \r\n         // ? Plane Ground\r\n         const planeGeometry = new THREE.PlaneGeometry(100, 100, 10, 10);\r\n         // soft green collor: 0x44aa88\r\n         const planeMaterial = new THREE.MeshBasicMaterial({map:texture, side: THREE.DoubleSide});\r\n         const plane = new THREE.Mesh(planeGeometry, planeMaterial);\r\n         plane.receiveShadow = true;\r\n         plane.rotation.x = -0.5 * Math.PI;\r\n         plane.position.y = -0.5;\r\n         scene.add(plane);\r\n         \r\n         // ? set background soft blue: 0x44aaff\r\n         scene.background = new THREE.Color(0x44aaff);\r\n         \r\n         // ? draw FPS\r\n         const stats = new Stats();\r\n         document.body.appendChild(stats.dom);\r\n         \r\n         // * camera lookAt\r\n         camera.lookAt(0,0,0);\r\n         // * camera update\r\n         camera.updateProjectionMatrix();\r\n         \r\n         camera.position.z = 18;\r\n         camera. position.y = 10;\r\n         // camera rotation\r\n         camera.rotation.z = 50;\r\n\r\n         // ? show x,y,z lines in scene\r\n         const axesHelper = new THREE.AxesHelper( 50 );\r\n         scene.add( axesHelper );\r\n\r\n\r\n         // ! DRAW THE PLAYER NAME IN 2D.\r\n         const canvas = document.createElement('canvas');\r\n         const context = canvas.getContext('2d');\r\n         context.font = 'Bold 28px Arial';\r\n         context.fillRect(0,0,0,300);\r\n         const textureText = new THREE.CanvasTexture(canvas);\r\n         const spriteMaterial = new THREE.SpriteMaterial({ map: textureText });\r\n         const sprite = new THREE.Sprite(spriteMaterial);\r\n         sprite.scale.set(10, 5, 1.0);\r\n\r\n         // * wasd movement\r\n         document.addEventListener('keydown', (event) => {\r\n            const keyName = event.key;\r\n            if (keyName === 'w') {\r\n               // up arrow or 'w' - move forward\r\n               player.position.x -= moveSpeed * Math.sin(player.rotation.y);\r\n               player.position.z -= moveSpeed * Math.cos(player.rotation.y);\r\n               updatePlayerData();\r\n               socket.emit('updatePosition', playerData);\r\n            }\r\n            if (keyName === 's') {\r\n                           // down arrow or 's' - move backward\r\n               player.position.x += moveSpeed * Math.sin(player.rotation.y);\r\n               player.position.z += moveSpeed * Math.cos(player.rotation.y);\r\n               updatePlayerData();\r\n               socket.emit('updatePosition', playerData);\r\n            }\r\n            if (keyName === 'a') {\r\n               // left arrow or 'a' - rotate left\r\n               player.position.x -= moveSpeed;\r\n               updatePlayerData();\r\n               socket.emit('updatePosition', playerData);\r\n            }\r\n            if (keyName === 'd') {\r\n                           // right arrow or 'd' - rotate right\r\n               player.position.x += moveSpeed;\r\n               updatePlayerData();\r\n               socket.emit('updatePosition', playerData);\r\n            }\r\n            if (keyName === ' ') {\r\n               console.log('pulou');\r\n            }\r\n         }); //keydown\r\n         // document.addEventListener('keyup', (event) => {\r\n         //    const keyName = event.key;\r\n         //    if (keyName === 'w') {\r\n         //       playerBody.velocity.z = 0;\r\n         //    }\r\n         //    if (keyName === 's') {\r\n         //       playerBody.velocity.z = 0;\r\n\r\n         //    }\r\n         //    if (keyName === 'a') {\r\n         //       playerBody.velocity.x = 0;\r\n         //    }\r\n         //    if (keyName === 'd') {\r\n         //       playerBody.velocity.x = 0;\r\n         //    }\r\n         // }); //keyup\r\n\r\n\r\n         const update = () => { \r\n            // * update camera\r\n            camera.updateProjectionMatrix();\r\n            // * update controls\r\n            controls.update();\r\n            // * update stats\r\n            stats.update();\r\n            // * update cannonDebugger\r\n            cannonDebugger.update();\r\n            // * update physicsWorld\r\n            physicsWorld.step(1/60);\r\n            // * update player username position\r\n            sprite.position.copy(playerBody.position);\r\n            sprite.position.y += 3.4;\r\n\r\n         };\r\n         const animate = () => { // animation loop\r\n            update();\r\n            physicsWorld.fixedStep();\r\n            requestAnimationFrame(animate);\r\n            renderer.render(scene, camera);\r\n         }\r\n         animate();\r\n      }\r\n\r\n    }, []);\r\n\r\n\r\n   function handleChange(event) {\r\n      setName(event.target.value);\r\n      console.log(name);\r\n   }\r\n\r\n\r\n   function handleClick() { // envio apenas o username\r\n      // if (name != \"\") {\r\n      //    if (name.length > 3 && name.length < 10) {\r\n      //       socket.emit('newPlayer', name);\r\n      //       document.getElementById(\"username\").style.display = \"none\";\r\n      //       document.getElementById(\"buttonSubmit\").style.display = \"none\";\r\n      //    }else{\r\n      //       alert(\"Nome muito curto\");\r\n      //    }\r\n      // }else{\r\n      //    alert(\"Nome invÃ¡lido\");\r\n      // }\r\n   }\r\n   function handleExit() {\r\n      \r\n   }\r\n   function handleMessageChange(event) {\r\n      setMessage(event.target.value);\r\n   }\r\n   function handleSendMessage(e) {\r\n      e.preventDefault();\r\n      socket.emit('message', message, name);\r\n      // set value to empty\r\n      console.log(message)\r\n      document.getElementById(\"chat\").value = \"\";  \r\n   }\r\n   \r\n   \r\n   return (\r\n      \r\n      <div className=\"App\">\r\n         <header className=\"App-header\" z-index=\"15000   \">\r\n         <meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\"/> \r\n            <h1>Game</h1>\r\n            \r\n            <div>\r\n               <label>Digite um nome </label><br/>\r\n               <input id=\"username\" type='text' maxLength={12} placeholder='username' onChange={handleChange}></input><br/>\r\n               <button id=\"buttonSubmit\" type='submit' onClick={handleClick}>Fazer Login</button>\r\n            </div>\r\n            <div id=\"root\">\r\n               <div id=\"chat-div\">\r\n                    <ul id=\"chat-list\"></ul>\r\n                    <form id=\"chat-form\">\r\n                        <input type=\"text\" id=\"chat\" autoComplete=\"off\" onChange={handleMessageChange}/>\r\n                        <button type=\"click\" id=\"submit\" onClick={handleSendMessage}>Send</button>\r\n                        <button type=\"submit\" id=\"btnSair\" onClick={handleExit} >Sair</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n         </header>\r\n      </div>\r\n      \r\n      \r\n   );\r\n}\r\nexport default App; "],"mappings":"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"},"metadata":{},"sourceType":"module"}